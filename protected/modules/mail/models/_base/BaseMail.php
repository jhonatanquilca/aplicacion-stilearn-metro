<?php

/**
 * This is the model base class for the table "mail".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Mail".
 *
 * Columns in table "mail" available as properties of the model,
 * followed by relations of table "mail" available as properties of the model.
 *
 * @property integer $id
 * @property string $asunto
 * @property string $contenido
 * @property string $email
 * @property string $fecha_creacion
 * @property string $fecha_envio
 * @property integer $usuario_creacion_id
 * @property string $estado
 * @property integer $plantilla_id
 *
 * @property MailPlantilla $plantilla
 */
abstract class BaseMail extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'mail';
    }

    public static function representingColumn() {
        return 'contenido';
    }

    public function rules() {
        return array(
            array('contenido, email, usuario_creacion_id', 'required'),
            array('usuario_creacion_id, plantilla_id', 'numerical', 'integerOnly'=>true),
            array('email', 'email'),
            array('asunto', 'length', 'max'=>200),
            array('email', 'length', 'max'=>45),
            array('estado', 'length', 'max'=>10),
            array('fecha_envio', 'safe'),
            array('estado', 'in', 'range' => array('PENDIENTE','ENVIADO','NO_ENVIADO')), // enum,
            array('asunto, fecha_envio, estado, plantilla_id', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, asunto, contenido, email, fecha_creacion, fecha_envio, usuario_creacion_id, estado, plantilla_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'plantilla' => array(self::BELONGS_TO, 'MailPlantilla', 'plantilla_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'asunto' => Yii::t('app', 'Asunto'),
                'contenido' => Yii::t('app', 'Contenido'),
                'email' => Yii::t('app', 'Email'),
                'fecha_creacion' => Yii::t('app', 'Fecha Creacion'),
                'fecha_envio' => Yii::t('app', 'Fecha Envio'),
                'usuario_creacion_id' => Yii::t('app', 'Usuario Creacion'),
                'estado' => Yii::t('app', 'Estado'),
                'plantilla_id' => Yii::t('app', 'Plantilla'),
                'plantilla' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('asunto', $this->asunto, true);
        $criteria->compare('contenido', $this->contenido, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('fecha_creacion', $this->fecha_creacion, true);
        $criteria->compare('fecha_envio', $this->fecha_envio, true);
        $criteria->compare('usuario_creacion_id', $this->usuario_creacion_id);
        $criteria->compare('estado', $this->estado, true);
        $criteria->compare('plantilla_id', $this->plantilla_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'CTimestampBehavior' => array(
                'class' => 'zii.behaviors.CTimestampBehavior',
                'createAttribute' => 'fecha_creacion',
                'updateAttribute' => null,
                'timestampExpression' => new CDbExpression('NOW()'),
            )
        ), parent::behaviors());
    }
}