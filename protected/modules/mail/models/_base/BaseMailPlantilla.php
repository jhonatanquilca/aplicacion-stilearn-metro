<?php

/**
 * This is the model base class for the table "mail_plantilla".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MailPlantilla".
 *
 * Columns in table "mail_plantilla" available as properties of the model,
 * followed by relations of table "mail_plantilla" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property string $mensaje
 * @property string $estado
 * @property string $fecha_creacion
 * @property string $fecha_actualizacion
 * @property integer $usuario_creacion_id
 * @property string $usuario_actualizacion_id
 *
 * @property Mail[] $mails
 */
abstract class BaseMailPlantilla extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'mail_plantilla';
    }

    public static function representingColumn() {
        return 'nombre';
    }

    public function rules() {
        return array(
            array('nombre, mensaje, estado, usuario_creacion_id', 'required'),
            array('usuario_creacion_id', 'numerical', 'integerOnly'=>true),
            array('nombre', 'length', 'max'=>64),
            array('estado', 'length', 'max'=>8),
            array('usuario_actualizacion_id', 'length', 'max'=>45),
            array('fecha_actualizacion', 'safe'),
            array('estado', 'in', 'range' => array('ACTIVO','INACTIVO')), // enum,
            array('fecha_actualizacion, usuario_actualizacion_id', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, nombre, mensaje, estado, fecha_creacion, fecha_actualizacion, usuario_creacion_id, usuario_actualizacion_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'mails' => array(self::HAS_MANY, 'Mail', 'plantilla_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'nombre' => Yii::t('app', 'Nombre'),
                'mensaje' => Yii::t('app', 'Mensaje'),
                'estado' => Yii::t('app', 'Estado'),
                'fecha_creacion' => Yii::t('app', 'Fecha Creacion'),
                'fecha_actualizacion' => Yii::t('app', 'Fecha Actualizacion'),
                'usuario_creacion_id' => Yii::t('app', 'Usuario Creacion'),
                'usuario_actualizacion_id' => Yii::t('app', 'Usuario Actualizacion'),
                'mails' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('mensaje', $this->mensaje, true);
        $criteria->compare('estado', $this->estado, true);
        $criteria->compare('fecha_creacion', $this->fecha_creacion, true);
        $criteria->compare('fecha_actualizacion', $this->fecha_actualizacion, true);
        $criteria->compare('usuario_creacion_id', $this->usuario_creacion_id);
        $criteria->compare('usuario_actualizacion_id', $this->usuario_actualizacion_id, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'CTimestampBehavior' => array(
                'class' => 'zii.behaviors.CTimestampBehavior',
                'createAttribute' => 'fecha_creacion',
                'updateAttribute' => 'fecha_actualizacion',
                'timestampExpression' => new CDbExpression('NOW()'),
            )
        ), parent::behaviors());
    }
}